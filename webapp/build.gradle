buildscript {
  ext.springBootVersion = '2.0.0.M5'

  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
  }
}

repositories {
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
}

apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'

sourceSets {
  main {
    resources {
      srcDir "config/dev"
    }
  }
  test {
    resources {
      srcDir "config/test"
    }
  }
}


dependencies {

  // CorDapp dependencies
  // Specify your cordapp's dependencies below, including dependent cordapps
  compile project(':cordapp')

  // app specific deps
  compile 'com.corundumstudio.socketio:netty-socketio:1.7.13'

  // Spring Boot
  compile('org.springframework.boot:spring-boot-starter')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile("com.fasterxml.jackson.module:jackson-module-kotlin")
  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile('org.springframework.boot:spring-boot-test')
}

node {
  version = '10.1.0'
  download = true

  workDir = file("${project.projectDir}/../frontend/node")
  npmWorkDir = file("${project.projectDir}/../frontend")
  nodeModulesDir = file("${project.projectDir}/../frontend")
}


task buildFrontend(type: NpmTask) {
  args = ['run', 'build']
}
buildFrontend.dependsOn(npm_install)

task cleanFrontendDir(type: Delete) {
  delete 'src/main/resources/static'
}
cleanFrontendDir.dependsOn(buildFrontend)

task buildAndCopyFrontend(type: Copy) {
  from '../frontend/dist/'
  into 'src/main/resources/static/'
}
buildAndCopyFrontend.dependsOn(cleanFrontendDir)